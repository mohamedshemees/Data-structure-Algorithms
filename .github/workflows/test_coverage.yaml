---
name: Test Coverage Enforcement
on:
  pull_request:
    branches:
      - main
jobs:
  coverage-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: temurin
      - name: Run coverage check
        run: |
          # Run tests and generate reports
          ./gradlew clean test jacocoTestReport jacocoTestCoverageVerification

          # Safely calculate coverage percentage
          COVERAGE=$(awk -F'[><]' '
            BEGIN {cov=0; total=1}  # Default values to prevent division by zero
            /<counter type="LINE"/ {
              cov=$3;
              total=$3+$5;
              if (total > 0) {
                coverage=int(cov/total*100);
                print coverage;
                exit;  # Process only the first match
              } else {
                print 0;
                exit;
              }
            }
            END {
              if (!coverage) print 0;  # Fallback if no match found
            }' build/reports/jacoco/test/jacocoTestReport.xml)

          echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
          echo "Total line coverage: $COVERAGE%"

          # Only fail if we have meaningful coverage data below threshold
          if [ "$COVERAGE" -ne 0 ] && [ "$COVERAGE" -lt 80 ]; then
            echo "❌ Coverage below required 80% threshold"
            exit 1
          elif [ "$COVERAGE" -eq 0 ]; then
            echo "⚠️ Warning: No coverage data found"
          fi
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/jacoco/test/html/
