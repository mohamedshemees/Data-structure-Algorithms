name: Test and Coverage Check

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-and-generate-report:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      tests_passed: ${{ steps.test.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: temurin

      - name: Run tests
        id: test
        run: |
          ./gradlew clean test jacocoTestReport

      - name: Comment if tests failed
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "‚ùå Some tests failed. Please fix the tests."
            });

  check-coverage:
    needs: test-and-generate-report
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    if: ${{ needs.test-and-generate-report.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: temurin

      - name: Generate coverage verification
        id: coverage
        continue-on-error: true
        run: |
          ./gradlew jacocoTestCoverageVerification

      - name: Parse coverage report
        run: |
          REPORT_PATH="build/reports/jacoco/test/jacocoTestReport.xml"
          if [ ! -f "$REPORT_PATH" ]; then
            echo "‚ùå JaCoCo report not found!"
            exit 1
          fi

          sudo apt-get install -y libxml2-utils

          LINE_COVERED=$(xmllint --xpath "string(//counter[@type='LINE']/@covered)" "$REPORT_PATH")
          LINE_MISSED=$(xmllint --xpath "string(//counter[@type='LINE']/@missed)" "$REPORT_PATH")
          CLASS_COVERED=$(xmllint --xpath "string(//counter[@type='CLASS']/@covered)" "$REPORT_PATH")
          CLASS_MISSED=$(xmllint --xpath "string(//counter[@type='CLASS']/@missed)" "$REPORT_PATH")
          BRANCH_COVERED=$(xmllint --xpath "string(//counter[@type='BRANCH']/@covered)" "$REPORT_PATH")
          BRANCH_MISSED=$(xmllint --xpath "string(//counter[@type='BRANCH']/@missed)" "$REPORT_PATH")

          LINE_COVERAGE_PERCENT=$(( (LINE_COVERED * 100) / (LINE_COVERED + LINE_MISSED) ))
          CLASS_COVERAGE_PERCENT=$(( (CLASS_COVERED * 100) / (CLASS_COVERED + CLASS_MISSED) ))
          BRANCH_COVERAGE_PERCENT=$(( (BRANCH_COVERED * 100) / (BRANCH_COVERED + BRANCH_MISSED) ))

          echo "LINE_COVERAGE_PERCENT=${LINE_COVERAGE_PERCENT}" >> $GITHUB_ENV
          echo "CLASS_COVERAGE_PERCENT=${CLASS_COVERAGE_PERCENT}" >> $GITHUB_ENV
          echo "BRANCH_COVERAGE_PERCENT=${BRANCH_COVERAGE_PERCENT}" >> $GITHUB_ENV

      - name: Comment on PR with coverage result
        uses: actions/github-script@v7
        with:
          script: |
            const lineCoverage = process.env.LINE_COVERAGE_PERCENT;
            const classCoverage = process.env.CLASS_COVERAGE_PERCENT;
            const branchCoverage = process.env.BRANCH_COVERAGE_PERCENT;

            const comment = `
            ## üõ°Ô∏è JaCoCo Test Coverage Report
            | Metric          | Coverage % |
            |-----------------|------------|
            | Line Coverage   | ${lineCoverage}% |
            | Class Coverage  | ${classCoverage}% |
            | Branch Coverage | ${branchCoverage}% |

            ${lineCoverage >= 80 && classCoverage >= 80 && branchCoverage >= 80
              ? '‚úÖ **Coverage is above 80%. Ready to merge!**'
              : '‚ùå **Coverage is below 80%. Please add more tests before merging.**'}

            üìä [View full report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Fail if coverage too low
        run: |
          if [ "$LINE_COVERAGE_PERCENT" -lt 80 ] || [ "$CLASS_COVERAGE_PERCENT" -lt 80 ] || [ "$BRANCH_COVERAGE_PERCENT" -lt 80 ]; then
            echo "‚ùå Coverage below threshold. Failing."
            exit 1
          fi
